{
  "openapi": "3.0.1",
  "info": {
    "title": "API de Gestion des Commandes de pizzas",
    "description": "Une API pour gérer les commandes de Pizzas.",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Recuperer Informations de l'utilisateur connecté ",
        "description": "Recuperer Informations de l'utilisateur connecté",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/client/commandes": {
      "post": {
        "tags": [
          "Commandes"
        ],
        "summary": "Creer une nouvelle Commande",
        "description": "Pour Creer une commande l'utilisateur doit etre authentifié!",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandeCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandeCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandeCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Recuperer toutes les Commandes",
        "description": "Seuls les admins peuvent voir toutes les commandes",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/client/commandes/{id}": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Recuperer Commande avec l'id",
        "description": "l'utilisateur doit etre authentifié!",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/{id}/status": {
      "put": {
        "tags": [
          "Commandes"
        ],
        "summary": "Modifier le status de la commande",
        "description": "Le statut doit être l'un des suivants : 'EnCours', 'Livree', 'EnChemin'. Seuls les admins peuvent modifier le status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandeStatusUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandeStatusUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandeStatusUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/pizzas": {
      "get": {
        "tags": [
          "Pizzas"
        ],
        "summary": "Récupère toutes les pizzas avec pagination",
        "description": "Retourne une liste paginée de pizzas.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Pizzas"
        ],
        "summary": "Crée une nouvelle pizza",
        "description": "Crée une nouvelle pizza dans le système.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PizzaCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PizzaCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PizzaCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pizza créée avec succès",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PizzaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PizzaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PizzaDto"
                }
              }
            }
          },
          "400": {
            "description": "Demande invalide"
          }
        }
      }
    },
    "/admin/pizzas/{id}": {
      "get": {
        "tags": [
          "Pizzas"
        ],
        "summary": "Récupère une pizza par ID",
        "description": "Retourne les détails d'une pizza spécifique.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Pizzas"
        ],
        "summary": "Met à jour une pizza",
        "description": "Met à jour les informations d'une pizza existante.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PizzaUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PizzaUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PizzaUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pizza mise à jour avec succès",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PizzaDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PizzaDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PizzaDto"
                }
              }
            }
          },
          "400": {
            "description": "Demande invalide"
          },
          "404": {
            "description": "Pizza non trouvée"
          }
        }
      },
      "delete": {
        "tags": [
          "Pizzas"
        ],
        "summary": "Supprime une pizza",
        "description": "Supprime une pizza spécifique par ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pizza supprimée avec succès"
          },
          "404": {
            "description": "Pizza non trouvée"
          }
        }
      }
    },
    "/admin/pizzas/ingredients": {
      "get": {
        "tags": [
          "Pizzas"
        ],
        "summary": "Récupère tous les ingrédients",
        "description": "Retourne la liste de tous les ingrédients disponibles.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Enregistre un nouvel utilisateur",
        "description": "Permet de créer un nouvel utilisateur avec un rôle spécifique. Les rôles disponibles sont 'Admin' et 'User'.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/{userId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Supprime un utilisateur",
        "description": "Permet à un administrateur de supprimer un utilisateur existant à partir de son identifiant.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/getall": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/roles": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CommandeCreateDto": {
        "type": "object",
        "properties": {
          "commandePizzas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandePizzaCreateDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandePizzaCreateDto": {
        "required": [
          "quantite"
        ],
        "type": "object",
        "properties": {
          "pizzaId": {
            "type": "integer",
            "format": "int32"
          },
          "quantite": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CommandeStatusUpdateDto": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          }
        },
        "additionalProperties": false
      },
      "PizzaCreateDto": {
        "required": [
          "ingredientsIds",
          "nom",
          "prix"
        ],
        "type": "object",
        "properties": {
          "nom": {
            "minLength": 3,
            "type": "string"
          },
          "prix": {
            "minimum": 0,01,
            "type": "number",
            "format": "double"
          },
          "ingredientsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "PizzaDto": {
        "required": [
          "ingredients",
          "nom",
          "prix"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nom": {
            "minLength": 3,
            "type": "string"
          },
          "prix": {
            "minimum": 0,01,
            "type": "number",
            "format": "double"
          },
          "ingredients": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "PizzaUpdateDto": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "nullable": true
          },
          "prix": {
            "type": "number",
            "format": "double"
          },
          "ingredientsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterModel": {
        "required": [
          "confirmPassword",
          "email",
          "password",
          "role"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "role": {
            "minLength": 1,
            "pattern": "^(Admin|User)$",
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Veuillez entrer le jeton JWT sous la forme 'Bearer votre_token",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}